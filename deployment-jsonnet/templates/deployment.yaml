---
# Source: microservice/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-microservice
  labels:
    app.kubernetes.io/name: microservice
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: hey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "stable"
    helm.sh/chart: microservice-0.7.11
    kubecost.team: "infra"
    kubecost.app: "test"
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    
    type: RollingUpdate
  progressDeadlineSeconds: 900
  selector:
    matchLabels:
      app.kubernetes.io/name: microservice
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservice
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: hey
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "stable"
        helm.sh/chart: microservice-0.7.11
        kubecost.team: "infra"
        kubecost.app: "test"
      annotations:
        ad.datadoghq.com/tags: '{"component":"hey","project":"infra","team":"infra"}'
        rollme: "6XUkV"
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: microservice
          securityContext:
            {}
          image: "nginx:stable"
          imagePullPolicy: IfNotPresent
          env:
            - name: COMMIT
              value: "stable"
            - name: TAG
              value: "stable"
          envFrom:
            - configMapRef:
                name: test-microservice
            - secretRef:
                name: test-microservice
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
      terminationGracePeriodSeconds: 30
